---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  annotations:
    kustomize.toolkit.fluxcd.io/force: enabled
  name: prometheus
  namespace: prometheus
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      version: 72.3.0
  install:
    crds: Create
    remediation:
      retries: 3
  interval: 24h
  timeout: 10m
  upgrade:
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
  values:
    alertmanager:
      alertmanagerSpec:
        resources:
          requests:
            cpu: 1m
            memory: 36Mi
          limits:
            memory: 36Mi
    grafana:
      persistence:
        enabled: true
        type: sts
        storageClassName: "longhorn"
        accessModes:
          - ReadWriteMany
        size: 50Gi
        finalizers:
          - kubernetes.io/pvc-protection
      ingress:
        enabled: true
        ingressClassName: traefik
        hosts:
          - grafana.homelab-peej.dev
        tls:
          - secretName: grafana-internal-tls-secret
            hosts:
              - grafana.homelab-peej.dev
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'grafana-dashboards-kubernetes'
              orgId: 1
              folder: 'Kubernetes'
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
      dashboards:
        grafana-dashboards-kubernetes:
          k8s-system-api-server:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
            token: ''
          k8s-system-coredns:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
            token: ''
          k8s-views-global:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
            token: ''
          k8s-views-namespaces:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
            token: ''
          k8s-views-nodes:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
            token: ''
          k8s-views-pods:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
            token: ''
    kubeStateMetrics:
      resources:
        requests:
          cpu: 6m
          memory: 50Mi
        limits:
          memory: 50Mi
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 512m
            memory: 2277Mi
          limits:
            memory: 2277Mi
        additionalScrapeConfigs:
          - job_name: 'unifipoller'
            scrape_interval: 30s
            static_configs:
              - targets: ['unpoller.unpoller.svc.cluster.local:9130']
          - job_name: 'ping-server'
            kubernetes_sd_configs:
              - role: endpoints
            scrape_interval: 10s
            metrics_path: '/metrics'
            scheme: http
            static_configs:
              - targets: ['ping-server.ping-server.svc.cluster.local:8080']
          # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L79
          - job_name: 'kubernetes-endpoints'
            scrape_interval: 10s
            scrape_timeout: 10s
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_k8s_app]
                action: keep
                regex: cilium
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+)(?::\d+);(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
          # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L156
          - job_name: 'kubernetes-pods'
            scrape_interval: 10s
            scrape_timeout: 10s
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: (.+):(?:\d+);(\d+)
                replacement: ${1}:${2}
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod
              - source_labels: [__meta_kubernetes_pod_container_port_number]
                action: keep
                regex: \d+
          # https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml#L119
          - job_name: 'kubernetes-services'
            scrape_interval: 10s
            scrape_timeout: 10s
            metrics_path: /metrics
            params:
              module: [http_2xx]
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: true
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: ${1}:${2}
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                target_label: service
          - job_name: 'kubernetes-cadvisor'
            scrape_interval: 10s
            scrape_timeout: 10s
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      prometheusConfigSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteMany"]
              resources:
                requests:
                  storage: 50Gi
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            memory: 50Mi
      ingress:
        enabled: true
        ingressClassName: traefik
        hosts:
          - prometheus.homelab-peej.dev
        tls:
          - secretName: prometheus-internal-tls-secret
            hosts:
              - prometheus.homelab-peej.dev
    prometheusOperator:
      resources:
        requests:
          cpu: 2m
          memory: 77Mi
        limits:
          memory: 77Mi
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 1m
            memory: 48Mi
          limits:
            memory: 48Mi
